name: CI

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_TELEMETRY_DISABLED: '1'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  db-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify migrations structure
        shell: bash
        run: |
          set -euo pipefail
          dir="supabase/migrations"
          if [ ! -d "$dir" ]; then
            echo "Missing migration directory: $dir" >&2
            exit 1
          fi
          shopt -s nullglob
          files=("$dir"/*.sql)
          if (( ${#files[@]} == 0 )); then
            echo "No migration files found in $dir" >&2
            exit 1
          fi
          fail=0
          for f in "${files[@]}"; do
            base=$(basename "$f")
            if [[ ! "$base" =~ ^[0-9]{14}_[a-z0-9_-]+\.sql$ ]]; then
              echo "Invalid migration filename: $base" >&2
              fail=1
            fi
            if ! file "$f" | grep -qi 'text'; then
              echo "Migration is not a text file: $base" >&2
              fail=1
            fi
          done
          exit $fail

  build:
    runs-on: ubuntu-latest
    needs: [lint, db-verify]
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_TELEMETRY_DISABLED: '1'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

  db-push:
    name: Apply migrations to Supabase
    runs-on: ubuntu-latest
    needs: [lint, db-verify]
    if: ${{ secrets.SUPABASE_ACCESS_TOKEN != '' && secrets.SUPABASE_PROJECT_REF != '' }}
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies (includes Supabase CLI)
        run: npm ci

      - name: Supabase login
        run: |
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "SUPABASE_ACCESS_TOKEN is not set." >&2
            exit 1
          fi
          npx supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: Link Supabase project
        run: npx supabase link --project-ref "$SUPABASE_PROJECT_REF"

      - name: Apply migrations (db push)
        run: npx supabase db push
